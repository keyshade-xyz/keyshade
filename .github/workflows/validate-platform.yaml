name: Validate Platform

on:
  push:
    branches:
      - '!develop'
      - '!main'
    paths:
      [
        'packages/api-client/**',
        'apps/platform/**',
        '.github/workflows/validate-platform.yaml',
        '.github/workflows/deploy-platform.yaml'
      ]
  pull_request:
    paths:
      [
        'packages/api-client/**',
        'apps/platform/**',
        '.github/workflows/deploy-platform.yaml',
        '.github/workflows/validate-platform.yaml'
      ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate-node-build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    name: Validate Platform (Node)

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.2.0
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install packages
        run: |
          pnpm i

      - name: Build deps
        run: |
          pnpm build:schema
          pnpm build:api-client

      - name: Lint
        run: |
          pnpm run lint:platform

      # - name: Build
      #   run: |
      #     pnpm run build:platform

  validate-docker-build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    name: Validate Platform (Docker)
    needs: validate-node-build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.2.0
          run_install: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Platform image
        env:
          NEXT_PUBLIC_BACKEND_URL: http://127.0.0.1:4200
          NEXT_PUBLIC_SENTRY_ENVIRONMENT: ci
          NEXT_PUBLIC_POSTHOG_KEY: test-key
          NEXT_PUBLIC_POSTHOG_HOST: https://app.posthog.com
        run: pnpm docker:build:platform

      - name: Verify Platform image
        run: docker image inspect keyshade/platform:ci-${{ github.sha }}

      - name: Run Platform container
        run: pnpm docker:run:platform

      - name: Platform health check
        run: |
          set -euo pipefail
          for i in {1..30}; do
            if curl -fsS "http://127.0.0.1:3025/api/health" >/dev/null; then
              echo "Health check passed"
              exit 0
            fi
            echo "Waiting for service... ($i/30)"
            sleep 2
          done
          echo "Service failed to become healthy in time"
          docker logs platform-ci || true
          exit 1

      - name: Cleanup
        if: always()
        run: |
          set -euo pipefail
          docker ps -a || true
          if [ "${{ job.status }}" != 'success' ]; then
            docker logs platform-ci || true
          fi
          docker rm -f platform-ci || true
          docker image rm -f keyshade/platform:ci-${{ github.sha }} || true
