name: Validate CLI

on:
  push:
    branches:
      - '!develop'
      - '!main'
    paths:
      [
        'packages/api-client/**',
        'packages/secret-scan/**',
        'apps/cli/**',
        '.github/workflows/validate-cli.yaml',
        '.github/workflows/deploy-cli.yaml'
      ]
  pull_request:
    paths:
      [
        'packages/api-client/**',
        'packages/secret-scan/**',
        'apps/cli/**',
        '.github/workflows/deploy-cli.yaml',
        '.github/workflows/validate-cli.yaml'
      ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    name: Validate CLI

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.2.0
          run_install: false

      - name: Enable corepack
        run: |
          corepack enable
          corepack prepare pnpm@9.2.0 --activate

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install packages
        run: |
          pnpm i

      - name: Lint
        run: |
          pnpm run lint:cli

      - name: Build
        run: |
          pnpm run build:cli

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build CLI image
        run: pnpm docker:build:cli

      - name: Verify CLI image
        run: docker image inspect keyshade/cli:ci-${{ github.sha }}

      - name: CLI smoke test
        run: pnpm docker:run:cli

      - name: Cleanup
        if: always()
        run: |
          set -euo pipefail
          docker ps -a || true
          if [ "${{ job.status }}" != 'success' ]; then
            docker logs cli-ci || true
          fi
          docker rm -f cli-ci || true
          docker image rm -f keyshade/cli:ci-${{ github.sha }} || true
