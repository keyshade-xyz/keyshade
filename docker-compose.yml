services:
  db:
    image: postgres:13
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: keyshade_db
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - keyshade-dev

  redis:
    image: redis:7
    ports:
      - '6379:6379'
    volumes:
      - redis:/data
    networks:
      - keyshade-dev

  minio:
    image: docker.io/bitnami/minio:2022
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: supersecret
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio:/data
    networks:
      - keyshade-dev

  sentry:
    image: getsentry/sentry:22.1.0
    ports:
      - "9002:9000"
    restart: unless-stopped
    environment:
      SENTRY_SECRET_KEY: ${SENTRY_SECRET_KEY:-changeme}
      SENTRY_EMAIL_HOST: 'smtp'
      SENTRY_EMAIL_PORT: 1025
      SENTRY_DB_NAME: ${SENTRY_DB_NAME:-sentry}
      SENTRY_DB_USER: ${SENTRY_DB_USER:-sentry}
      SENTRY_DB_PASSWORD: ${SENTRY_DB_PASSWORD:-sentry}
      SENTRY_REDIS_HOST: 'sentry-redis'
      SENTRY_POSTGRES_HOST: 'sentry-postgres'
    depends_on:
      - sentry-postgres
      - sentry-redis
    volumes:
      - sentry-data:/var/lib/sentry/files
    networks:
      - keyshade-dev

  sentry-postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${SENTRY_DB_USER:-sentry}
      POSTGRES_PASSWORD: ${SENTRY_DB_PASSWORD:-sentry}
      POSTGRES_DB: ${SENTRY_DB_NAME:-sentry}
    volumes:
      - sentry-postgres-data:/var/lib/postgresql/data
    networks:
      - keyshade-dev

  sentry-redis:
    image: redis:7
    volumes:
      - sentry-redis-data:/data
    networks:
      - keyshade-dev

networks:
  keyshade-dev:
    driver: bridge

volumes:
  db:
  redis:
  minio:
  sentry-data:
  sentry-postgres-data:
  sentry-redis-data:
